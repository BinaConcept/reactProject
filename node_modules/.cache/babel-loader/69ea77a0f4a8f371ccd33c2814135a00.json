{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\components\\\\republiekList.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Republiek = () => {\n  _s();\n\n  const dispatch = useDispatch(); //state.posts kom van postsSlice lijn10\n\n  const posts = useSelector(selectAllPosts);\n  const postStatus = useSelector(state => state.posts.status);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(getPosts());\n    }\n\n    ;\n  }, [postStatus, dispatch]); //Hier zou je array kunnen sorteren\n  // const renderedPosts= posts.map(post=>(\n  //     <article key={post.id} className='post-excerpt'>\n  //         <h3>{post.title}</h3>\n  //         <p>{post.content}</p>\n  //         <Link to={`/posts/${post.id}`} className=\"button muted-button\">View post</Link>\n  //     </article>\n  // ));\n\n  const republiekList = posts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Card title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: \"This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Last updated 3 mins ago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, post.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lijst met Artikelen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), republiekList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Republiek, \"kt1fAJBX5RzyDSjEr8sHnnNhMfc=\", true);\n\n_c = Republiek;\n\nvar _c;\n\n$RefreshReg$(_c, \"Republiek\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/components/republiekList.js"],"names":["Republiek","dispatch","useDispatch","posts","useSelector","selectAllPosts","postStatus","state","status","useEffect","getPosts","republiekList","map","post","id"],"mappings":";;;;AAIE,OAAO,MAAMA,SAAS,GAAE,MAAI;AAAA;;AAE1B,QAAMC,QAAQ,GAAEC,WAAW,EAA3B,CAF0B,CAI1B;;AACA,QAAMC,KAAK,GAAGC,WAAW,CAACC,cAAD,CAAzB;AAEA,QAAMC,UAAU,GAAGF,WAAW,CAAEG,KAAK,IAAEA,KAAK,CAACJ,KAAN,CAAYK,MAArB,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGH,UAAU,KAAI,MAAjB,EAAwB;AACpBL,MAAAA,QAAQ,CAACS,QAAQ,EAAT,CAAR;AAEH;;AAAA;AACJ,GALQ,EAKN,CAACJ,UAAD,EAAaL,QAAb,CALM,CAAT,CAT0B,CAgB9B;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMU,aAAa,GAAER,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACjC;AAAuB,IAAA,SAAS,EAAC,cAAjC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACQ;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACA;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,qCAAyB;AAAO,gBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ,KAAcA,IAAI,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAmBF,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,aAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAtDQ;;GAAMX,S;;KAAAA,S","sourcesContent":["\r\n\r\n\r\n\r\n  export const Republiek =()=>{\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    //state.posts kom van postsSlice lijn10\r\n    const posts = useSelector(selectAllPosts);\r\n\r\n    const postStatus = useSelector (state=>state.posts.status)\r\n\r\n    useEffect(()=>{\r\n        if(postStatus ==='idle'){\r\n            dispatch(getPosts())\r\n\r\n        };\r\n    }, [postStatus, dispatch])\r\n\r\n//Hier zou je array kunnen sorteren\r\n\r\n    // const renderedPosts= posts.map(post=>(\r\n    //     <article key={post.id} className='post-excerpt'>\r\n    //         <h3>{post.title}</h3>\r\n    //         <p>{post.content}</p>\r\n    //         <Link to={`/posts/${post.id}`} className=\"button muted-button\">View post</Link>\r\n    //     </article>\r\n    // ));\r\n\r\n      const republiekList= posts.map(post=>(\r\n        <article key={post.id} className='post-excerpt'>\r\n            <div className=\"card mb-3\" >\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"col-md-4\">\r\n                        {/* <img src=\"...\" className=\"img-fluid rounded-start\" alt=\"...\"> */}\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Card title</h5>\r\n                            <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                            <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </article>\r\n    ));\r\n\r\n    return(\r\n        <section className='posts-list'>\r\n            <h2>Lijst met Artikelen</h2>\r\n            {republiekList}\r\n        \r\n        </section>\r\n    )\r\n        \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}