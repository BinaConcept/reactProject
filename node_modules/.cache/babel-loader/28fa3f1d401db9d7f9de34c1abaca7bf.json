{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\features\\\\posts\\\\addPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newsPost } from '../postsSlice';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n\n  const inputRef = useRef();\n  const [imageUrls, setImageUrls] = useState('');\n  const [display, setDisplay] = useState('');\n  const [title, setTitle] = useState('');\n  const [discription, setDiscription] = useState('');\n  const [subtitle, setSubtitle] = useState('');\n  const [content, setContent] = useState('');\n  const dispath = useDispatch(); //users ophalen uit de Redux-store\n\n  const provinces = useSelector(state => state.provinces); // const onPictureChanged = e => setImageUrls(e.target.value)\n\n  const onDisplayChanged = e => setDisplay(e.target.value);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onDiscriptionChanged = e => setDiscription(e.target.value);\n\n  const onSubtitleChanged = e => setSubtitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostCliked = () => {\n    //je kunt script testen controleerd\n    if (title && content) {\n      //nieuws object gestuurd\n      dispath(newsPost(imageUrls, display, title, discription, subtitle, content));\n      setImageUrls('');\n      setDisplay('');\n      setTitle('');\n      setDiscription('');\n      setSubtitle('');\n      setContent('');\n    }\n  };\n\n  const provinceOptions = provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: province.city,\n    children: province.city\n  }, province.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)); //title content userId\n  // const canSave=Boolean(title) && Boolean(content) && Boolean(displayId)\n\n  const App = () => {\n    const validationSchema = Yup.object().shape({\n      fullname: Yup.string().required('Fullname is required'),\n      username: Yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n      email: Yup.string().required('Email is required').email('Email is invalid'),\n      password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n      confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n      acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrls\",\n        children: \"Picture :\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: () => setImageUrls(inputRef.current.files[0]),\n        ref: inputRef,\n        id: \"gallery-image\",\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), imageUrls ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `assets/images/${imageUrls.name}`,\n        className: \"img-fluid rounded-start\",\n        width: \"400\",\n        alt: \"news_picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        id: \"imageUrls\",\n        name: \"imageUrls\",\n        value: imageUrls.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDisplay\",\n        children: \"Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"display\",\n        value: display,\n        onChange: onDisplayChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), provinceOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsTitle\",\n        children: \"Title :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsTitle\",\n        name: \"newsTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDiscription\",\n        children: \"Discription :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsDiscription\",\n        name: \"newsDiscription\",\n        value: discription,\n        onChange: onDiscriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsSubtitle\",\n        children: \"Subtitel :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsSubtitle\",\n        name: \"newsSubtitle\",\n        value: subtitle,\n        onChange: onSubtitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsContent\",\n        children: \"Content :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsContent\",\n        name: \"newsContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostCliked,\n        children: \"Save news\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this); // return (\n  //   <section>\n  //     <h2>Add a New Post</h2>\n  //     <form>\n  //       <label htmlFor=\"postTitle\">Post Title:</label>\n  //       <input\n  //         type=\"text\"\n  //         id=\"postTitle\"\n  //         name=\"postTitle\"\n  //         value={title}\n  //         onChange={onTitleChanged}\n  //       />\n  //       <label htmlFor=\"postContent\">Content:</label>\n  //       <textarea\n  //         id=\"postContent\"\n  //         name=\"postContent\"\n  //         value={content}\n  //         onChange={onContentChanged}\n  //       />\n  //       <label htmlFor=\"postAutheur\">Auteur:</label>\n  //       <select id=\"Author\" value={userId} onChange={onAuthorChanged}>\n  //         <option value={\"\"}></option>\n  //         {userOptions}\n  //       </select>\n  //       <br/>\n  //       <button type=\"button\" disabled={!canSave} onClick={onSavePostCliked}>Save Post</button>\n  //       <br/>\n  //     </form>\n  //   </section>\n  // )\n};\n\n_s(AddPostForm, \"VjUUcNZINiTsy/Ydt0srsxSiA24=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/posts/addPostForm.js"],"names":["useState","useRef","useDispatch","useSelector","newsPost","React","useForm","yupResolver","Yup","AddPostForm","inputRef","imageUrls","setImageUrls","display","setDisplay","title","setTitle","discription","setDiscription","subtitle","setSubtitle","content","setContent","dispath","provinces","state","onDisplayChanged","e","target","value","onTitleChanged","onDiscriptionChanged","onSubtitleChanged","onContentChanged","onSavePostCliked","provinceOptions","map","province","city","id","App","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","current","files","name"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newsPost } from '../postsSlice'\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nexport const AddPostForm = () => {\r\n  const inputRef = useRef()\r\n  const [imageUrls, setImageUrls] = useState('')\r\n  const [display, setDisplay] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [discription, setDiscription] = useState('')\r\n  const [subtitle, setSubtitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n\r\n\r\n  const dispath = useDispatch();\r\n\r\n  //users ophalen uit de Redux-store\r\n  const provinces = useSelector(state => state.provinces)\r\n\r\n  // const onPictureChanged = e => setImageUrls(e.target.value)\r\n  const onDisplayChanged = e => setDisplay(e.target.value)\r\n  const onTitleChanged = e => setTitle(e.target.value)\r\n  const onDiscriptionChanged = e => setDiscription(e.target.value)\r\n  const onSubtitleChanged = e => setSubtitle(e.target.value)\r\n  const onContentChanged = e => setContent(e.target.value)\r\n\r\n  const onSavePostCliked = () => {\r\n    //je kunt script testen controleerd\r\n    if (title && content) {\r\n      //nieuws object gestuurd\r\n      dispath(newsPost(imageUrls, display, title, discription, subtitle, content))\r\n      setImageUrls('');\r\n      setDisplay('');\r\n      setTitle('');\r\n      setDiscription('');\r\n      setSubtitle('');\r\n      setContent('');\r\n    }\r\n\r\n  }\r\n\r\n  const provinceOptions = provinces.map(province => (\r\n    <option key={province.id} value={province.city}>{province.city}</option>\r\n  ));\r\n  //title content userId\r\n  // const canSave=Boolean(title) && Boolean(content) && Boolean(displayId)\r\n  const App: React.F = () => {\r\n    const validationSchema = Yup.object().shape({\r\n      fullname: Yup.string().required('Fullname is required'),\r\n      username: Yup.string()\r\n        .required('Username is required')\r\n        .min(6, 'Username must be at least 6 characters')\r\n        .max(20, 'Username must not exceed 20 characters'),\r\n      email: Yup.string()\r\n        .required('Email is required')\r\n        .email('Email is invalid'),\r\n      password: Yup.string()\r\n        .required('Password is required')\r\n        .min(6, 'Password must be at least 6 characters')\r\n        .max(40, 'Password must not exceed 40 characters'),\r\n      confirmPassword: Yup.string()\r\n        .required('Confirm Password is required')\r\n        .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\r\n      acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\r\n    });\r\n  \r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <section>\r\n      <h2>Add a News</h2>\r\n      <form><label htmlFor=\"imageUrls\">Picture :&nbsp;</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={() => setImageUrls(inputRef.current.files[0])}\r\n          ref={inputRef}\r\n          id=\"gallery-image\"\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />  <br />\r\n        {\r\n       imageUrls?<img src={`assets/images/${imageUrls.name}`} className=\"img-fluid rounded-start\" width=\"400\"  alt=\"news_picture\" />:null\r\n          \r\n        }\r\n        \r\n\r\n\r\n        <br />\r\n        <input\r\n          type=\"hidden\"\r\n          id=\"imageUrls\"\r\n          name=\"imageUrls\"\r\n          value={imageUrls.name}\r\n        />\r\n\r\n\r\n        <label htmlFor=\"newsDisplay\">Display:</label>\r\n        <select id=\"display\" value={display} onChange={onDisplayChanged}>\r\n          <option value={\"\"}></option>\r\n          {provinceOptions}\r\n        </select>\r\n\r\n        <label htmlFor=\"newsTitle\">Title :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsTitle\"\r\n          name=\"newsTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsDiscription\">Discription :</label>\r\n        <textarea\r\n          id=\"newsDiscription\"\r\n          name=\"newsDiscription\"\r\n          value={discription}\r\n          onChange={onDiscriptionChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsSubtitle\">Subtitel :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsSubtitle\"\r\n          name=\"newsSubtitle\"\r\n          value={subtitle}\r\n          onChange={onSubtitleChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsContent\">Content :</label>\r\n        <textarea\r\n          id=\"newsContent\"\r\n          name=\"newsContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <br />\r\n\r\n        <button type=\"button\" onClick={onSavePostCliked}>Save news</button>\r\n        <br />\r\n      </form>\r\n    </section>\r\n  )\r\n\r\n  // return (\r\n  //   <section>\r\n  //     <h2>Add a New Post</h2>\r\n  //     <form>\r\n  //       <label htmlFor=\"postTitle\">Post Title:</label>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         id=\"postTitle\"\r\n  //         name=\"postTitle\"\r\n  //         value={title}\r\n  //         onChange={onTitleChanged}\r\n  //       />\r\n  //       <label htmlFor=\"postContent\">Content:</label>\r\n  //       <textarea\r\n  //         id=\"postContent\"\r\n  //         name=\"postContent\"\r\n  //         value={content}\r\n  //         onChange={onContentChanged}\r\n  //       />\r\n  //       <label htmlFor=\"postAutheur\">Auteur:</label>\r\n  //       <select id=\"Author\" value={userId} onChange={onAuthorChanged}>\r\n  //         <option value={\"\"}></option>\r\n  //         {userOptions}\r\n  //       </select>\r\n  //       <br/>\r\n\r\n  //       <button type=\"button\" disabled={!canSave} onClick={onSavePostCliked}>Save Post</button>\r\n  //       <br/>\r\n  //     </form>\r\n  //   </section>\r\n  // )\r\n}"]},"metadata":{},"sourceType":"module"}