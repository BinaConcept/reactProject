{"ast":null,"code":"// import React, { useState,useRef } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { useHistory } from 'react-router-dom'\n// import { selectNewsById } from '../postsSlice'\n// import { postUpdated } from '../postsSlice'\n// export const EditNewsForm = ({ match }) => {\n//   const { Id } = match.params\n//   const inputRef = useRef()\n//   const news = useSelector(state =>selectNewsById(state, Id))\n//   const [imageUrls, setImageUrls] = useState(news.imageUrls)\n//   const [display, setDisplay] = useState(news.display)\n//   const [title, setTitle] = useState(news.title)\n//   const [discription, setDiscription] = useState(news.discription)\n//   const [subtitle, setSubtitle] = useState(news.subtitle)\n//   const [content, setContent] = useState(news.content)\n//  //users ophalen uit de Redux-store\n//  const provinces = useSelector(state => state.provinces)\n// //   const [title, setTitle] = useState(post.title)\n// //   const [content, setContent] = useState(post.content)\n//   //dispatch hebben we nodig om aan onze reducer te geraken vb post\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n// //   const onTitleChanged = e => setTitle(e.target.value)\n// //   const onContentChanged = e => setContent(e.target.value)\n//   const onDisplayChanged = e => setDisplay(e.target.value)\n//   const onTitleChanged = e => setTitle(e.target.value)\n//   const onDiscriptionChanged = e => setDiscription(e.target.value)\n//   const onSubtitleChanged = e => setSubtitle(e.target.value)\n//   const onContentChanged = e => setContent(e.target.value)\n//   const onSavePostClicked = () => {\n//     if (title && content) {\n//       dispatch(postUpdated({ id: Id, title, content }))\n//     //   history.push(`/posts/${Id}`)\n//     }\n//   }\n//   const provinceOptions = provinces.map(province => (\n//     <option key={province.id} value={province.city}>{province.city}</option>\n//   ));\n//   return (\n//         <section>\n//           <h2>Edit Post</h2>\n//           <form>\n//           <label htmlFor=\"imageUrls\">Picture :&nbsp;</label>\n//         <input\n//           type=\"file\"\n//           onChange={() => setImageUrls(inputRef.current.files[0])}\n//           ref={inputRef}\n//           id=\"gallery-image\"\n//           accept=\".jpg, .jpeg, .png\"\n//         />  <br />\n//         {\n//           imageUrls ? <img src={`assets/images/${imageUrls.name}`} className=\"img-fluid rounded-start\" width=\"400\" alt=\"news_picture\" /> : null\n//         }\n//         <br />\n//         <input\n//           type=\"hidden\"\n//           id=\"imageUrls\"\n//           name=\"imageUrls\"\n//           value={imageUrls.name}\n//         />\n//         <label htmlFor=\"newsDisplay\">Display:</label>\n//         <select id=\"display\" value={display} onChange={onDisplayChanged}>\n//           <option value={\"\"}></option>\n//           {provinceOptions}\n//         </select>\n//         <label htmlFor=\"newsTitle\">Title :</label>\n//         <input\n//           type=\"text\"\n//           id=\"newsTitle\"\n//           name=\"newsTitle\"\n//           value={title}\n//           onChange={onTitleChanged}\n//         />\n//         <label htmlFor=\"newsDiscription\">Discription :</label>\n//         <textarea\n//           id=\"newsDiscription\"\n//           name=\"newsDiscription\"\n//           value={discription}\n//           onChange={onDiscriptionChanged}\n//         />\n//         <label htmlFor=\"newsSubtitle\">Subtitel :</label>\n//         <input\n//           type=\"text\"\n//           id=\"newsSubtitle\"\n//           name=\"newsSubtitle\"\n//           value={subtitle}\n//           onChange={onSubtitleChanged}\n//         />\n//         <label htmlFor=\"newsContent\">Content :</label>\n//         <textarea\n//           id=\"newsContent\"\n//           name=\"newsContent\"\n//           value={content}\n//           onChange={onContentChanged}\n//         />\n//         <br />\n//         <br />\n//           </form>\n//           <button type=\"button\" onClick={onSavePostClicked}>\n//             Save Post\n//           </button>\n//         </section>\n//       )\n// //   return (\n// //     <section>\n// //       <h2>Edit Post</h2>\n// //       <form>\n// //         <label htmlFor=\"postTitle\">Post Title:</label>\n// //         <input\n// //           type=\"text\"\n// //           id=\"postTitle\"\n// //           name=\"postTitle\"\n// //           placeholder=\"What's on your mind?\"\n// //           value={title}\n// //           onChange={onTitleChanged}\n// //         />\n// //         <label htmlFor=\"postContent\">Content:</label>\n// //         <textarea\n// //           id=\"postContent\"\n// //           name=\"postContent\"\n// //           value={content}\n// //           onChange={onContentChanged}\n// //         />\n// //       </form>\n// //       <button type=\"button\" onClick={onSavePostClicked}>\n// //         Save Post\n// //       </button>\n// //     </section>\n// //   )\n// }","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/components/editNewsForm.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useState,useRef } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\n// import { selectNewsById } from '../postsSlice'\r\n\r\n// import { postUpdated } from '../postsSlice'\r\n\r\n// export const EditNewsForm = ({ match }) => {\r\n//   const { Id } = match.params\r\n//   const inputRef = useRef()\r\n//   const news = useSelector(state =>selectNewsById(state, Id))\r\n\r\n\r\n\r\n//   const [imageUrls, setImageUrls] = useState(news.imageUrls)\r\n//   const [display, setDisplay] = useState(news.display)\r\n//   const [title, setTitle] = useState(news.title)\r\n//   const [discription, setDiscription] = useState(news.discription)\r\n//   const [subtitle, setSubtitle] = useState(news.subtitle)\r\n//   const [content, setContent] = useState(news.content)\r\n\r\n//  //users ophalen uit de Redux-store\r\n//  const provinces = useSelector(state => state.provinces)\r\n\r\n// //   const [title, setTitle] = useState(post.title)\r\n// //   const [content, setContent] = useState(post.content)\r\n\r\n//   //dispatch hebben we nodig om aan onze reducer te geraken vb post\r\n//   const dispatch = useDispatch()\r\n//   const history = useHistory()\r\n\r\n// //   const onTitleChanged = e => setTitle(e.target.value)\r\n// //   const onContentChanged = e => setContent(e.target.value)\r\n\r\n//   const onDisplayChanged = e => setDisplay(e.target.value)\r\n//   const onTitleChanged = e => setTitle(e.target.value)\r\n//   const onDiscriptionChanged = e => setDiscription(e.target.value)\r\n//   const onSubtitleChanged = e => setSubtitle(e.target.value)\r\n//   const onContentChanged = e => setContent(e.target.value)\r\n\r\n//   const onSavePostClicked = () => {\r\n//     if (title && content) {\r\n//       dispatch(postUpdated({ id: Id, title, content }))\r\n//     //   history.push(`/posts/${Id}`)\r\n//     }\r\n//   }\r\n\r\n//   const provinceOptions = provinces.map(province => (\r\n//     <option key={province.id} value={province.city}>{province.city}</option>\r\n//   ));\r\n//   return (\r\n//         <section>\r\n//           <h2>Edit Post</h2>\r\n//           <form>\r\n//           <label htmlFor=\"imageUrls\">Picture :&nbsp;</label>\r\n//         <input\r\n//           type=\"file\"\r\n//           onChange={() => setImageUrls(inputRef.current.files[0])}\r\n//           ref={inputRef}\r\n//           id=\"gallery-image\"\r\n//           accept=\".jpg, .jpeg, .png\"\r\n//         />  <br />\r\n//         {\r\n//           imageUrls ? <img src={`assets/images/${imageUrls.name}`} className=\"img-fluid rounded-start\" width=\"400\" alt=\"news_picture\" /> : null\r\n//         }\r\n\r\n\r\n\r\n//         <br />\r\n//         <input\r\n//           type=\"hidden\"\r\n//           id=\"imageUrls\"\r\n//           name=\"imageUrls\"\r\n//           value={imageUrls.name}\r\n//         />\r\n\r\n\r\n//         <label htmlFor=\"newsDisplay\">Display:</label>\r\n//         <select id=\"display\" value={display} onChange={onDisplayChanged}>\r\n//           <option value={\"\"}></option>\r\n//           {provinceOptions}\r\n//         </select>\r\n\r\n//         <label htmlFor=\"newsTitle\">Title :</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"newsTitle\"\r\n//           name=\"newsTitle\"\r\n//           value={title}\r\n//           onChange={onTitleChanged}\r\n//         />\r\n\r\n//         <label htmlFor=\"newsDiscription\">Discription :</label>\r\n//         <textarea\r\n//           id=\"newsDiscription\"\r\n//           name=\"newsDiscription\"\r\n//           value={discription}\r\n//           onChange={onDiscriptionChanged}\r\n//         />\r\n\r\n//         <label htmlFor=\"newsSubtitle\">Subtitel :</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"newsSubtitle\"\r\n//           name=\"newsSubtitle\"\r\n//           value={subtitle}\r\n//           onChange={onSubtitleChanged}\r\n//         />\r\n\r\n//         <label htmlFor=\"newsContent\">Content :</label>\r\n//         <textarea\r\n//           id=\"newsContent\"\r\n//           name=\"newsContent\"\r\n//           value={content}\r\n//           onChange={onContentChanged}\r\n//         />\r\n//         <br />\r\n\r\n        \r\n//         <br />\r\n//           </form>\r\n//           <button type=\"button\" onClick={onSavePostClicked}>\r\n//             Save Post\r\n//           </button>\r\n//         </section>\r\n//       )\r\n\r\n// //   return (\r\n// //     <section>\r\n// //       <h2>Edit Post</h2>\r\n// //       <form>\r\n// //         <label htmlFor=\"postTitle\">Post Title:</label>\r\n// //         <input\r\n// //           type=\"text\"\r\n// //           id=\"postTitle\"\r\n// //           name=\"postTitle\"\r\n// //           placeholder=\"What's on your mind?\"\r\n// //           value={title}\r\n// //           onChange={onTitleChanged}\r\n// //         />\r\n// //         <label htmlFor=\"postContent\">Content:</label>\r\n// //         <textarea\r\n// //           id=\"postContent\"\r\n// //           name=\"postContent\"\r\n// //           value={content}\r\n// //           onChange={onContentChanged}\r\n// //         />\r\n// //       </form>\r\n// //       <button type=\"button\" onClick={onSavePostClicked}>\r\n// //         Save Post\r\n// //       </button>\r\n// //     </section>\r\n// //   )\r\n// }"]},"metadata":{},"sourceType":"module"}