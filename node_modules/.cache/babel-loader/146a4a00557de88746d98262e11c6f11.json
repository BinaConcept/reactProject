{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\components\\\\editNewsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { selectNewsById } from '../features/postsSlice';\nimport { newsUpdated } from '../features/postsSlice';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditNewsForm = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const {\n    Id\n  } = match.params;\n  const inputRef = useRef();\n  const history = useHistory();\n  const news = useSelector(state => selectNewsById(state, Id));\n  const [imageUrls, setImageUrls] = useState(news.imageUrls);\n  const [display, setDisplay] = useState(news.displayTag);\n  const [title, setTitle] = useState(news.title);\n  const [discription, setDiscription] = useState(news.description);\n  const [subtitle, setSubtitle] = useState(news.subtitle);\n  const [content, setContent] = useState(news.content); //users ophalen uit de Redux-store\n\n  const provinces = useSelector(state => state.provinces);\n  const dispatch = useDispatch();\n\n  const onDisplayChanged = e => setDisplay(e.target.value);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onDiscriptionChanged = e => setDiscription(e.target.value);\n\n  const onSubtitleChanged = e => setSubtitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const provinceOptions = provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: province.city,\n    children: province.city\n  }, province.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n\n  const picture = () => {\n    const str = imageUrls.toString().substring(0, 2);\n    return str === '//' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrls,\n      className: \"img-fluid rounded-start\",\n      width: \"400\",\n      alt: \"news_picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/assets/images/${imageUrls.name}`,\n      className: \"img-fluid rounded-start\",\n      width: \"400\",\n      alt: \"news_picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  }; // const onSavePostClicked = () => {\n  //  const str = imageUrls.toString().substring(0,2)\n  //   var imagePath=\"\"\n  //   if (str!==\"//\" ) {\n  //     imagePath=\"/assets/images/\"+imageUrls.name\n  //   }\n  //   else{\n  //     imagePath=imageUrls.name\n  //   }\n  //   dispatch(newsUpdated({ id:Id,imagePath, display, title, description, subtitle, content }))\n  //   console.log(imagePath)\n  // }\n\n\n  const SignupSchema = yup.object().shape({\n    display: yup.string().required('Selecteer provincie'),\n    newsTitle: yup.string().required('Titel verplicht'),\n    newsDiscription: yup.string().required('Omschrijving verplicht'),\n    newsSubtitle: yup.string().required('Ondertiteling verplicht'),\n    newsContent: yup.string().required('Inhoud verplicht')\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(SignupSchema)\n  });\n\n  const onSubmit = data => {\n    const str = imageUrls.toString().substring(0, 2);\n    var imagePath = \"\";\n\n    if (str !== \"//\") {\n      imagePath = \"/assets/images/\" + imageUrls.name;\n    } else {\n      imagePath = imageUrls;\n    }\n\n    dispatch(newsUpdated({\n      id: Id,\n      imagePath,\n      display,\n      title,\n      discription,\n      subtitle,\n      content\n    }));\n    history.push(`/republiek`);\n  };\n\n  const onError = errors => {\n    console.error('error: ', errors);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit, onError),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrls\",\n        children: \"Picture :\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: () => setImageUrls(inputRef.current.files[0]),\n        ref: inputRef,\n        id: \"gallery-image\",\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), picture(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDisplay\",\n        children: \"Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"display\",\n        value: display,\n        name: \"display\",\n        ...register('display'),\n        onChange: onDisplayChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), provinceOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), errors.display && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.display.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsTitle\",\n        children: \"Title :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsTitle\",\n        name: \"newsTitle\",\n        value: title,\n        ...register('newsTitle'),\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), errors.newsTitle && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.newsTitle.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDiscription\",\n        children: \"Discription :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsDiscription\",\n        name: \"newsDiscription\",\n        value: discription,\n        ...register('newsDiscription'),\n        onChange: onDiscriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), errors.newsDiscription && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.newsDiscription.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsSubtitle\",\n        children: \"Subtitel :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsSubtitle\",\n        name: \"newsSubtitle\",\n        value: subtitle,\n        ...register('newsSubtitle'),\n        onChange: onSubtitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), errors.newsTitle && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.newsTitle.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsContent\",\n        children: \"Content :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsContent\",\n        name: \"newsContent\",\n        value: content,\n        ...register('newsContent'),\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), errors.newsTitle && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.newsTitle.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditNewsForm, \"6NdenFz48GCktjyzdlY5tobzUc0=\", false, function () {\n  return [useHistory, useSelector, useSelector, useDispatch, useForm];\n});\n\n_c = EditNewsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNewsForm\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/components/editNewsForm.js"],"names":["React","useState","useRef","useDispatch","useSelector","useHistory","selectNewsById","newsUpdated","useForm","yupResolver","yup","EditNewsForm","match","Id","params","inputRef","history","news","state","imageUrls","setImageUrls","display","setDisplay","displayTag","title","setTitle","discription","setDiscription","description","subtitle","setSubtitle","content","setContent","provinces","dispatch","onDisplayChanged","e","target","value","onTitleChanged","onDiscriptionChanged","onSubtitleChanged","onContentChanged","provinceOptions","map","province","city","id","picture","str","toString","substring","name","SignupSchema","object","shape","string","required","newsTitle","newsDiscription","newsSubtitle","newsContent","register","handleSubmit","formState","errors","resolver","onSubmit","data","imagePath","push","onError","console","error","current","files","message"],"mappings":"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","sourcesContent":["import React, { useState,useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { selectNewsById } from '../features/postsSlice'\r\n\r\nimport { newsUpdated } from '../features/postsSlice'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\n\r\nexport const EditNewsForm = ({ match }) => {\r\n  const { Id } = match.params\r\n  const inputRef = useRef()\r\n  const history = useHistory()\r\n  const news = useSelector(state =>selectNewsById(state, Id))\r\n\r\n  const [imageUrls, setImageUrls] = useState(news.imageUrls)\r\n  const [display, setDisplay] = useState(news.displayTag)\r\n  const [title, setTitle] = useState(news.title)\r\n  const [discription, setDiscription] = useState(news.description)\r\n  const [subtitle, setSubtitle] = useState(news.subtitle)\r\n  const [content, setContent] = useState(news.content)\r\n //users ophalen uit de Redux-store\r\n  const provinces = useSelector(state => state.provinces)\r\n  const dispatch = useDispatch()\r\n  \r\n  const onDisplayChanged = e => setDisplay(e.target.value)\r\n  const onTitleChanged = e => setTitle(e.target.value)\r\n  const onDiscriptionChanged = e => setDiscription(e.target.value)\r\n  const onSubtitleChanged = e => setSubtitle(e.target.value)\r\n  const onContentChanged = e => setContent(e.target.value)\r\n\r\n  const provinceOptions = provinces.map(province => (\r\n    <option key={province.id} value={province.city}>{province.city}</option>\r\n  ));\r\n\r\nconst picture=()=>{\r\nconst str = imageUrls.toString().substring(0,2)\r\n\r\n\r\n  return(\r\n  str==='//'?\r\n    <img  src={imageUrls} className=\"img-fluid rounded-start\" width=\"400\" alt=\"news_picture\" />:\r\n    <img  src={`/assets/images/${imageUrls.name}`} className=\"img-fluid rounded-start\" width=\"400\" alt=\"news_picture\" />\r\n  )\r\n\r\n}\r\n\r\n// const onSavePostClicked = () => {\r\n//  const str = imageUrls.toString().substring(0,2)\r\n//   var imagePath=\"\"\r\n\r\n//   if (str!==\"//\" ) {\r\n//     imagePath=\"/assets/images/\"+imageUrls.name\r\n     \r\n//   }\r\n//   else{\r\n//     imagePath=imageUrls.name\r\n//   }\r\n//   dispatch(newsUpdated({ id:Id,imagePath, display, title, description, subtitle, content }))\r\n//   console.log(imagePath)\r\n// }\r\n\r\nconst SignupSchema = yup.object().shape({\r\n  display: yup.string().required('Selecteer provincie'),\r\n  newsTitle: yup.string().required('Titel verplicht'),\r\n  newsDiscription: yup.string().required('Omschrijving verplicht'),\r\n  newsSubtitle: yup.string().required('Ondertiteling verplicht'),\r\n  newsContent: yup.string().required('Inhoud verplicht')\r\n})\r\n\r\nconst {\r\n  register,\r\n  handleSubmit,\r\n  formState: { errors }\r\n} = useForm({\r\n  resolver: yupResolver(SignupSchema)\r\n})\r\n\r\n\r\nconst onSubmit = (data) => {\r\n  const str = imageUrls.toString().substring(0,2)\r\n  var imagePath=\"\"\r\n  if (str!==\"//\" ) {\r\n    imagePath=\"/assets/images/\"+imageUrls.name\r\n     \r\n  }\r\n  else{\r\n    imagePath=imageUrls\r\n  }\r\n  dispatch(newsUpdated({ id:Id,imagePath, display, title, discription, subtitle, content }))\r\n  history.push(`/republiek`)\r\n}\r\n\r\nconst onError = (errors) => {\r\n  console.error('error: ',errors)\r\n}\r\n  return (\r\n        <section>\r\n          <h2>Edit Post</h2>\r\n          <form  onSubmit={handleSubmit(onSubmit, onError)}>\r\n          <label htmlFor=\"imageUrls\">Picture :&nbsp;</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={() => setImageUrls(inputRef.current.files[0])}\r\n          ref={inputRef}\r\n          id=\"gallery-image\"\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />  \r\n        <br/>\r\n        {picture()}      \r\n         <br/>\r\n         \r\n         <label htmlFor=\"newsDisplay\">Display:</label>\r\n        <select id=\"display\"  value={display} name=\"display\" {...register('display')} onChange={onDisplayChanged}>\r\n          <option value={\"\"} ></option>\r\n          {provinceOptions}\r\n        </select>\r\n        {errors.display && <p>{errors.display.message}</p>}\r\n\r\n        <label htmlFor=\"newsTitle\">Title :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsTitle\"\r\n          name=\"newsTitle\"\r\n          value={title}\r\n          {...register('newsTitle')}\r\n          onChange={onTitleChanged}\r\n        />\r\n        {errors.newsTitle && <p>{errors.newsTitle.message}</p>}\r\n\r\n        <label htmlFor=\"newsDiscription\">Discription :</label>\r\n        <textarea\r\n          id=\"newsDiscription\"\r\n          name=\"newsDiscription\"\r\n          value={discription}\r\n          {...register('newsDiscription')}\r\n          onChange={onDiscriptionChanged}\r\n        />\r\n         {errors.newsDiscription && <p>{errors.newsDiscription.message}</p>}\r\n\r\n        <label htmlFor=\"newsSubtitle\">Subtitel :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsSubtitle\"\r\n          name=\"newsSubtitle\"\r\n          value={subtitle}\r\n          {...register('newsSubtitle')}\r\n          onChange={onSubtitleChanged}\r\n        />\r\n         {errors.newsTitle && <p>{errors.newsTitle.message}</p>}\r\n\r\n        <label htmlFor=\"newsContent\">Content :</label>\r\n        <textarea\r\n          id=\"newsContent\"\r\n          name=\"newsContent\"\r\n          value={content}\r\n          {...register('newsContent')}\r\n          onChange={onContentChanged}\r\n        />\r\n         {errors.newsTitle && <p>{errors.newsTitle.message}</p>}\r\n        <br />\r\n        <button type=\"submit\" >Update</button>\r\n        <br />\r\n      </form>\r\n    </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}