{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\features\\\\posts\\\\addPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newsPost } from '../postsSlice';\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().required(),\n  lastName: Yup.string(),\n  age: Yup.number().required().positive().integer(),\n  website: Yup.string().url()\n});\nexport const AddPostForm = () => {\n  _s();\n\n  const inputRef = useRef();\n  const [imageUrls, setImageUrls] = useState('');\n  const [display, setDisplay] = useState('');\n  const [title, setTitle] = useState('');\n  const [discription, setDiscription] = useState('');\n  const [subtitle, setSubtitle] = useState('');\n  const [content, setContent] = useState('');\n  const dispath = useDispatch(); //users ophalen uit de Redux-store\n\n  const provinces = useSelector(state => state.provinces); // const onPictureChanged = e => setImageUrls(e.target.value)\n\n  const onDisplayChanged = e => setDisplay(e.target.value);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onDiscriptionChanged = e => setDiscription(e.target.value);\n\n  const onSubtitleChanged = e => setSubtitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostCliked = () => {\n    //je kunt script testen controleerd\n    if (title && content) {\n      //nieuws object gestuurd\n      dispath(newsPost(imageUrls, display, title, discription, subtitle, content));\n      setImageUrls('');\n      setDisplay('');\n      setTitle('');\n      setDiscription('');\n      setSubtitle('');\n      setContent('');\n    }\n  };\n\n  const provinceOptions = provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: province.city,\n    children: province.city\n  }, province.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    firstName: Yup.string().required('First Name is required'),\n    lastName: Yup.string().required('Last name is required'),\n    dob: Yup.string().required('Date of Birth is required').matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Ts & Cs is required')\n  }); // functions to build form returned by useForm() hook\n  // const { register, handleSubmit, reset, errors } = useForm({\n  //     resolver: yupResolver(validationSchema)\n  // });\n  // function onSubmit(data) {\n  //     // display form data on success\n  //     alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\n  // }\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(SignupSchema)\n  });\n  const [isShow, setIsShow] = React.useState(false);\n\n  const onSubmit = data => {\n    console.info(data);\n  };\n\n  const onError = errors => {\n    console.error(errors);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit, onError),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('firstName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.firstName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrls\",\n        children: \"Picture :\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: () => setImageUrls(inputRef.current.files[0]),\n        ref: inputRef,\n        id: \"gallery-image\",\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), imageUrls ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `assets/images/${imageUrls.name}`,\n        className: \"img-fluid rounded-start\",\n        width: \"400\",\n        alt: \"news_picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 20\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        id: \"imageUrls\",\n        name: \"imageUrls\",\n        value: imageUrls.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDisplay\",\n        children: \"Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"display\",\n        value: display,\n        onChange: onDisplayChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), provinceOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsTitle\",\n        children: \"Title :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsTitle\",\n        name: \"newsTitle\",\n        value: title,\n        onChange: onTitleChanged // ref={register} \n        // className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDiscription\",\n        children: \"Discription :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsDiscription\",\n        name: \"newsDiscription\",\n        value: discription,\n        onChange: onDiscriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsSubtitle\",\n        children: \"Subtitel :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsSubtitle\",\n        name: \"newsSubtitle\",\n        value: subtitle,\n        onChange: onSubtitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsContent\",\n        children: \"Content :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsContent\",\n        name: \"newsContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostCliked,\n        children: \"Save news\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"ktCHFdjQQM5u5IFtZhitzRyB8Tg=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/posts/addPostForm.js"],"names":["useState","useRef","useDispatch","useSelector","newsPost","React","useForm","yupResolver","Yup","SignupSchema","object","shape","firstName","string","required","lastName","age","number","positive","integer","website","url","AddPostForm","inputRef","imageUrls","setImageUrls","display","setDisplay","title","setTitle","discription","setDiscription","subtitle","setSubtitle","content","setContent","dispath","provinces","state","onDisplayChanged","e","target","value","onTitleChanged","onDiscriptionChanged","onSubtitleChanged","onContentChanged","onSavePostCliked","provinceOptions","map","province","city","id","validationSchema","dob","matches","email","password","min","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","formState","errors","resolver","isShow","setIsShow","onSubmit","data","console","info","onError","error","message","current","files","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAGA,MAAMC,YAAY,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACvCC,EAAAA,SAAS,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,EAD4B;AAEvCC,EAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,EAF6B;AAGvCG,EAAAA,GAAG,EAAER,GAAG,CAACS,MAAJ,GAAaH,QAAb,GAAwBI,QAAxB,GAAmCC,OAAnC,EAHkC;AAIvCC,EAAAA,OAAO,EAAEZ,GAAG,CAACK,MAAJ,GAAaQ,GAAb;AAJ8B,CAAnB,CAArB;AASA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAAGtB,MAAM,EAAvB;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AAIA,QAAMoC,OAAO,GAAGlC,WAAW,EAA3B,CAX+B,CAa/B;;AACA,QAAMmC,SAAS,GAAGlC,WAAW,CAACmC,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B,CAd+B,CAgB/B;;AACA,QAAME,gBAAgB,GAAGC,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;AACA,QAAMC,cAAc,GAAGH,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,QAAME,oBAAoB,GAAGJ,CAAC,IAAIT,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhD;;AACA,QAAMG,iBAAiB,GAAGL,CAAC,IAAIP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;;AACA,QAAMI,gBAAgB,GAAGN,CAAC,IAAIL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B;AACA,QAAInB,KAAK,IAAIM,OAAb,EAAsB;AACpB;AACAE,MAAAA,OAAO,CAAChC,QAAQ,CAACoB,SAAD,EAAYE,OAAZ,EAAqBE,KAArB,EAA4BE,WAA5B,EAAyCE,QAAzC,EAAmDE,OAAnD,CAAT,CAAP;AACAT,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AAEF,GAbD;;AAeA,QAAMa,eAAe,GAAGX,SAAS,CAACY,GAAV,CAAcC,QAAQ,iBAC5C;AAA0B,IAAA,KAAK,EAAEA,QAAQ,CAACC,IAA1C;AAAA,cAAiDD,QAAQ,CAACC;AAA1D,KAAaD,QAAQ,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,UADsB,CAAxB;AAIA,QAAMC,gBAAgB,GAAG7C,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC1CiB,IAAAA,KAAK,EAAEpB,GAAG,CAACK,MAAJ,GACFC,QADE,CACO,mBADP,CADmC;AAG1CF,IAAAA,SAAS,EAAEJ,GAAG,CAACK,MAAJ,GACNC,QADM,CACG,wBADH,CAH+B;AAK1CC,IAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GACLC,QADK,CACI,uBADJ,CALgC;AAO1CwC,IAAAA,GAAG,EAAE9C,GAAG,CAACK,MAAJ,GACAC,QADA,CACS,2BADT,EAEAyC,OAFA,CAEQ,kDAFR,EAE4D,6DAF5D,CAPqC;AAU1CC,IAAAA,KAAK,EAAEhD,GAAG,CAACK,MAAJ,GACFC,QADE,CACO,mBADP,EAEF0C,KAFE,CAEI,kBAFJ,CAVmC;AAa1CC,IAAAA,QAAQ,EAAEjD,GAAG,CAACK,MAAJ,GACL6C,GADK,CACD,CADC,EACE,wCADF,EAEL5C,QAFK,CAEI,sBAFJ,CAbgC;AAgB1C6C,IAAAA,eAAe,EAAEnD,GAAG,CAACK,MAAJ,GACZ+C,KADY,CACN,CAACpD,GAAG,CAACqD,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADM,EACuB,sBADvB,EAEZ/C,QAFY,CAEH,8BAFG,CAhByB;AAmB1CgD,IAAAA,WAAW,EAAEtD,GAAG,CAACuD,IAAJ,GACRH,KADQ,CACF,CAAC,IAAD,CADE,EACM,4BADN;AAnB6B,GAAnB,CAAzB,CA1C+B,CAiEjC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAM;AACJI,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIF7D,OAAO,CAAC;AACV8D,IAAAA,QAAQ,EAAE7D,WAAW,CAACE,YAAD;AADX,GAAD,CAJX;AAOA,QAAM,CAAC4D,MAAD,EAASC,SAAT,IAAsBjE,KAAK,CAACL,QAAN,CAAe,KAAf,CAA5B;;AAEA,QAAMuE,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,IAAR,CAAaF,IAAb;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAIR,MAAD,IAAY;AAC1BM,IAAAA,OAAO,CAACG,KAAR,CAAcT,MAAd;AACD,GAFD;;AAME,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEF,YAAY,CAACM,QAAD,EAAWI,OAAX,CAA5B;AAAA,8BAEA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,aAAuBX,QAAQ,CAAC,WAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGCG,MAAM,CAACvD,SAAP,iBAAoB;AAAA,oBAAIuD,MAAM,CAACvD,SAAP,CAAiBiE;AAArB;AAAA;AAAA;AAAA;AAAA,gBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eASE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,MAAMpD,YAAY,CAACF,QAAQ,CAACuD,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,CAAD,CAF9B;AAGE,QAAA,GAAG,EAAExD,QAHP;AAIE,QAAA,EAAE,EAAC,eAJL;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE;AAAA;AAAA;AAAA;AAAA,cAjBF,EAkBGC,SAAS,gBAAC;AAAK,QAAA,GAAG,EAAG,iBAAgBA,SAAS,CAACwD,IAAK,EAA1C;AAA6C,QAAA,SAAS,EAAC,yBAAvD;AAAiF,QAAA,KAAK,EAAC,KAAvF;AAA8F,QAAA,GAAG,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,cAAD,GAAqH,IAlBjI,eAoBE;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,KAAK,EAAExD,SAAS,CAACwD;AAJnB;AAAA;AAAA;AAAA;AAAA,cArBF,eA4BE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eA6BE;AAAQ,QAAA,EAAE,EAAC,SAAX;AAAqB,QAAA,KAAK,EAAEtD,OAA5B;AAAqC,QAAA,QAAQ,EAAEa,gBAA/C;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGS,eAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF,eAkCE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,eAmCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,KAAK,EAAEpB,KAJT;AAKE,QAAA,QAAQ,EAAEe,cALZ,CAME;AACA;;AAPF;AAAA;AAAA;AAAA;AAAA,cAnCF,eA+CE;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE;AACE,QAAA,EAAE,EAAC,iBADL;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,KAAK,EAAEb,WAHT;AAIE,QAAA,QAAQ,EAAEc;AAJZ;AAAA;AAAA;AAAA;AAAA,cAhDF,eAuDE;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDF,eAwDE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,cAFL;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,KAAK,EAAEZ,QAJT;AAKE,QAAA,QAAQ,EAAEa;AALZ;AAAA;AAAA;AAAA;AAAA,cAxDF,eAgEE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhEF,eAiEE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAEX,OAHT;AAIE,QAAA,QAAQ,EAAEY;AAJZ;AAAA;AAAA;AAAA;AAAA,cAjEF,eAuEE;AAAA;AAAA;AAAA;AAAA,cAvEF,eAyEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzEF,eA0EE;AAAA;AAAA;AAAA;AAAA,cA1EF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD,CAhLM;;GAAMzB,W;UAWKpB,W,EAGEC,W,EAiEhBG,O;;;KA/ESgB,W","sourcesContent":["import { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newsPost } from '../postsSlice'\r\n\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n\tfirstName: Yup.string().required(),\r\n\tlastName: Yup.string(),\r\n\tage: Yup.number().required().positive().integer(),\r\n\twebsite: Yup.string().url()\r\n})\r\n\r\n\r\n\r\nexport const AddPostForm = () => {\r\n  const inputRef = useRef()\r\n  const [imageUrls, setImageUrls] = useState('')\r\n  const [display, setDisplay] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [discription, setDiscription] = useState('')\r\n  const [subtitle, setSubtitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n\r\n\r\n  const dispath = useDispatch();\r\n\r\n  //users ophalen uit de Redux-store\r\n  const provinces = useSelector(state => state.provinces)\r\n\r\n  // const onPictureChanged = e => setImageUrls(e.target.value)\r\n  const onDisplayChanged = e => setDisplay(e.target.value)\r\n  const onTitleChanged = e => setTitle(e.target.value)\r\n  const onDiscriptionChanged = e => setDiscription(e.target.value)\r\n  const onSubtitleChanged = e => setSubtitle(e.target.value)\r\n  const onContentChanged = e => setContent(e.target.value)\r\n\r\n  const onSavePostCliked = () => {\r\n    //je kunt script testen controleerd\r\n    if (title && content) {\r\n      //nieuws object gestuurd\r\n      dispath(newsPost(imageUrls, display, title, discription, subtitle, content))\r\n      setImageUrls('');\r\n      setDisplay('');\r\n      setTitle('');\r\n      setDiscription('');\r\n      setSubtitle('');\r\n      setContent('');\r\n    }\r\n\r\n  }\r\n\r\n  const provinceOptions = provinces.map(province => (\r\n    <option key={province.id} value={province.city}>{province.city}</option>\r\n  ));\r\n \r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required('Title is required'),\r\n    firstName: Yup.string()\r\n        .required('First Name is required'),\r\n    lastName: Yup.string()\r\n        .required('Last name is required'),\r\n    dob: Yup.string()\r\n        .required('Date of Birth is required')\r\n        .matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\r\n    email: Yup.string()\r\n        .required('Email is required')\r\n        .email('Email is invalid'),\r\n    password: Yup.string()\r\n        .min(6, 'Password must be at least 6 characters')\r\n        .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n    acceptTerms: Yup.bool()\r\n        .oneOf([true], 'Accept Ts & Cs is required')\r\n});\r\n\r\n// functions to build form returned by useForm() hook\r\n// const { register, handleSubmit, reset, errors } = useForm({\r\n//     resolver: yupResolver(validationSchema)\r\n// });\r\n\r\n// function onSubmit(data) {\r\n//     // display form data on success\r\n//     alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\r\n// }\r\n\r\nconst {\r\n  register,\r\n  handleSubmit,\r\n  formState: { errors }\r\n} = useForm({\r\n  resolver: yupResolver(SignupSchema)\r\n})\r\nconst [isShow, setIsShow] = React.useState(false)\r\n\r\nconst onSubmit = (data) => {\r\n  console.info(data)\r\n}\r\n\r\nconst onError = (errors) => {\r\n  console.error(errors)\r\n}\r\n\r\n\r\n  \r\n  return (\r\n    <section>\r\n      <h2>Add a News</h2>\r\n      <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n        \r\n      <div>\r\n\t\t\t\t\t\t<label>First Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" {...register('firstName')} />\r\n\t\t\t\t\t\t{errors.firstName && <p>{errors.firstName.message}</p>}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n        <label htmlFor=\"imageUrls\">Picture :&nbsp;</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={() => setImageUrls(inputRef.current.files[0])}\r\n          ref={inputRef}\r\n          id=\"gallery-image\"\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />  \r\n        <br/>\r\n        {imageUrls?<img src={`assets/images/${imageUrls.name}`} className=\"img-fluid rounded-start\" width=\"400\"  alt=\"news_picture\" />:null}\r\n\r\n        <br/>\r\n        <input\r\n          type=\"hidden\"\r\n          id=\"imageUrls\"\r\n          name=\"imageUrls\"\r\n          value={imageUrls.name}\r\n        />\r\n\r\n        <label htmlFor=\"newsDisplay\">Display:</label>\r\n        <select id=\"display\" value={display} onChange={onDisplayChanged}>\r\n          <option value={\"\"}></option>\r\n          {provinceOptions}\r\n        </select>\r\n\r\n        <label htmlFor=\"newsTitle\">Title :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsTitle\"\r\n          name=\"newsTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n          // ref={register} \r\n          // className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\r\n          \r\n        />\r\n       \r\n\r\n        <label htmlFor=\"newsDiscription\">Discription :</label>\r\n        <textarea\r\n          id=\"newsDiscription\"\r\n          name=\"newsDiscription\"\r\n          value={discription}\r\n          onChange={onDiscriptionChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsSubtitle\">Subtitel :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsSubtitle\"\r\n          name=\"newsSubtitle\"\r\n          value={subtitle}\r\n          onChange={onSubtitleChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsContent\">Content :</label>\r\n        <textarea\r\n          id=\"newsContent\"\r\n          name=\"newsContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <br />\r\n\r\n        <button type=\"button\" onClick={onSavePostCliked}>Save news</button>\r\n        <br />\r\n      </form>\r\n    </section>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}