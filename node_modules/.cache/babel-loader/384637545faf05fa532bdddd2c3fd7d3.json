{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\features\\\\posts\\\\addPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newsPost } from '../postsSlice';\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n\n  var _errors$title, _errors$firstName, _errors$lastName, _errors$dob, _errors$email, _errors$password, _errors$confirmPasswo, _errors$acceptTerms;\n\n  // form validation rules \n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    firstName: Yup.string().required('First Name is required'),\n    lastName: Yup.string().required('Last name is required'),\n    dob: Yup.string().required('Date of Birth is required').matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Ts & Cs is required')\n  }); // functions to build form returned by useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  function onSubmit(data) {\n    // display form data on success\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card m-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-header\",\n      children: \"React Form Validation Example with React Hook Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        onReset: reset,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"title\",\n              ref: register,\n              className: `form-control ${errors.title ? 'is-invalid' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Mr\",\n                children: \"Mr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Mrs\",\n                children: \"Mrs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Miss\",\n                children: \"Miss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Ms\",\n                children: \"Ms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"firstName\",\n              type: \"text\",\n              ref: register,\n              className: `form-control ${errors.firstName ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              type: \"text\",\n              ref: register,\n              className: `form-control ${errors.lastName ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"dob\",\n              type: \"date\",\n              ref: register,\n              className: `form-control ${errors.dob ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$dob = errors.dob) === null || _errors$dob === void 0 ? void 0 : _errors$dob.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              type: \"text\",\n              ref: register,\n              className: `form-control ${errors.email ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              ref: register,\n              className: `form-control ${errors.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"confirmPassword\",\n              type: \"password\",\n              ref: register,\n              className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"acceptTerms\",\n            type: \"checkbox\",\n            ref: register,\n            id: \"acceptTerms\",\n            className: `form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"acceptTerms\",\n            className: \"form-check-label\",\n            children: \"Accept Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mr-1\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            type: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddPostForm, \"qahlAmGchmiE8cpD0qaxgZSVF8Q=\", false, function () {\n  return [useForm];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/posts/addPostForm.js"],"names":["useState","useRef","useDispatch","useSelector","newsPost","React","useForm","yupResolver","Yup","AddPostForm","validationSchema","object","shape","title","string","required","firstName","lastName","dob","matches","email","password","min","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","errors","resolver","onSubmit","data","alert","JSON","stringify","message"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newsPost } from '../postsSlice'\r\n\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nexport const AddPostForm = () => {\r\n  // form validation rules \r\n  const validationSchema = Yup.object().shape({\r\n      title: Yup.string()\r\n          .required('Title is required'),\r\n      firstName: Yup.string()\r\n          .required('First Name is required'),\r\n      lastName: Yup.string()\r\n          .required('Last name is required'),\r\n      dob: Yup.string()\r\n          .required('Date of Birth is required')\r\n          .matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\r\n      email: Yup.string()\r\n          .required('Email is required')\r\n          .email('Email is invalid'),\r\n      password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required'),\r\n      acceptTerms: Yup.bool()\r\n          .oneOf([true], 'Accept Ts & Cs is required')\r\n  });\r\n\r\n  // functions to build form returned by useForm() hook\r\n  const { register, handleSubmit, reset, errors } = useForm({\r\n      resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n  function onSubmit(data) {\r\n      // display form data on success\r\n      alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\r\n  }\r\n\r\n  return (\r\n      <div className=\"card m-3\">\r\n          <h5 className=\"card-header\">React Form Validation Example with React Hook Form</h5>\r\n          <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit(onSubmit)} onReset={reset}>\r\n                  <div className=\"form-row\">\r\n                      <div className=\"form-group col\">\r\n                          <label>Title</label>\r\n                          <select name=\"title\" ref={register} className={`form-control ${errors.title ? 'is-invalid' : ''}`}>\r\n                              <option value=\"\"></option>\r\n                              <option value=\"Mr\">Mr</option>\r\n                              <option value=\"Mrs\">Mrs</option>\r\n                              <option value=\"Miss\">Miss</option>\r\n                              <option value=\"Ms\">Ms</option>\r\n                          </select>\r\n                          <div className=\"invalid-feedback\">{errors.title?.message}</div>\r\n                      </div>\r\n                      <div className=\"form-group col-5\">\r\n                          <label>First Name</label>\r\n                          <input name=\"firstName\" type=\"text\" ref={register} className={`form-control ${errors.firstName ? 'is-invalid' : ''}`} />\r\n                          <div className=\"invalid-feedback\">{errors.firstName?.message}</div>\r\n                      </div>\r\n                      <div className=\"form-group col-5\">\r\n                          <label>Last Name</label>\r\n                          <input name=\"lastName\" type=\"text\" ref={register} className={`form-control ${errors.lastName ? 'is-invalid' : ''}`} />\r\n                          <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                      <div className=\"form-group col\">\r\n                          <label>Date of Birth</label>\r\n                          <input name=\"dob\" type=\"date\" ref={register} className={`form-control ${errors.dob ? 'is-invalid' : ''}`} />\r\n                          <div className=\"invalid-feedback\">{errors.dob?.message}</div>\r\n                      </div>\r\n                      <div className=\"form-group col\">\r\n                          <label>Email</label>\r\n                          <input name=\"email\" type=\"text\" ref={register} className={`form-control ${errors.email ? 'is-invalid' : ''}`} />\r\n                          <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                      <div className=\"form-group col\">\r\n                          <label>Password</label>\r\n                          <input name=\"password\" type=\"password\" ref={register} className={`form-control ${errors.password ? 'is-invalid' : ''}`} />\r\n                          <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n                      </div>\r\n                      <div className=\"form-group col\">\r\n                          <label>Confirm Password</label>\r\n                          <input name=\"confirmPassword\" type=\"password\" ref={register} className={`form-control ${errors.confirmPassword ? 'is-invalid' : ''}`} />\r\n                          <div className=\"invalid-feedback\">{errors.confirmPassword?.message}</div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"form-group form-check\">\r\n                      <input name=\"acceptTerms\" type=\"checkbox\" ref={register} id=\"acceptTerms\" className={`form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`} />\r\n                      <label for=\"acceptTerms\" className=\"form-check-label\">Accept Terms & Conditions</label>\r\n                      <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <button type=\"submit\" className=\"btn btn-primary mr-1\">Register</button>\r\n                      <button className=\"btn btn-secondary\" type=\"reset\">Reset</button>\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}