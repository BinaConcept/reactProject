{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: '1',\n  title: 'Title1',\n  content: 'dit is wat tekst 1'\n}, {\n  id: '2',\n  title: 'Title2',\n  content: 'dit is wat tekst 2'\n}];\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    postAdded: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n\n      prepare(title, content, userId) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content,\n            user: userId\n          }\n        };\n      }\n\n    },\n\n    // postAdded(state, action){\n    //     // state:huidige state\n    //     state.push(action.payload)\n    // },\n    postUpdated(state, action) {\n      // in action.payload.id, .title, .content\n      const {\n        id,\n        title,\n        content\n      } = action.payload;\n      const existingPost = state.find(post => post.id === id);\n\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n      }\n    }\n\n  }\n});\nexport const {\n  postAdded,\n  postUpdated\n} = postsSlice.actions;\nexport default postsSlice.reducer; // video 1:40","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/postsSlice.js"],"names":["createSlice","nanoid","initialState","id","title","content","postsSlice","name","reducers","postAdded","reducer","state","action","push","payload","prepare","userId","user","postUpdated","existingPost","find","post","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,MAArB,QAAkC,kBAAlC;AAGA,MAAMC,YAAY,GAAE,CAChB;AAACC,EAAAA,EAAE,EAAC,GAAJ;AAASC,EAAAA,KAAK,EAAC,QAAf;AAAyBC,EAAAA,OAAO,EAAC;AAAjC,CADgB,EAEhB;AAACF,EAAAA,EAAE,EAAC,GAAJ;AAASC,EAAAA,KAAK,EAAC,QAAf;AAAyBC,EAAAA,OAAO,EAAC;AAAjC,CAFgB,CAApB;AAKA,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC3BO,EAAAA,IAAI,EAAC,OADsB;AAE3BL,EAAAA,YAF2B;AAG3BM,EAAAA,QAAQ,EAAC;AAELC,IAAAA,SAAS,EAAE;AACPC,MAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAe;AACtBD,QAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACC,OAHM;;AAIPC,MAAAA,OAAO,CAACX,KAAD,EAAQC,OAAR,EAAgBW,MAAhB,EAAuB;AAC1B,eAAM;AACFF,UAAAA,OAAO,EAAC;AACJX,YAAAA,EAAE,EAACF,MAAM,EADL;AAEJG,YAAAA,KAFI;AAGJC,YAAAA,OAHI;AAIJY,YAAAA,IAAI,EAACD;AAJD;AADN,SAAN;AAQH;;AAbM,KAFN;;AAkBL;AACA;AACA;AACA;AAEAE,IAAAA,WAAW,CAACP,KAAD,EAAQC,MAAR,EAAe;AACtB;AACA,YAAM;AAACT,QAAAA,EAAD;AAAKC,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,UAAsBO,MAAM,CAACE,OAAnC;AACA,YAAMK,YAAY,GAAGR,KAAK,CAACS,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAAClB,EAAL,KAAUA,EAA7B,CAArB;;AAEA,UAAGgB,YAAH,EAAgB;AACZA,QAAAA,YAAY,CAACf,KAAb,GAAmBA,KAAnB;AACAe,QAAAA,YAAY,CAACd,OAAb,GAAqBA,OAArB;AACH;AAEJ;;AAjCI;AAHkB,CAAD,CAA9B;AAuCA,OAAO,MAAM;AAACI,EAAAA,SAAD;AAAWS,EAAAA;AAAX,IAA0BZ,UAAU,CAACgB,OAA3C;AACP,eAAehB,UAAU,CAACI,OAA1B,C,CAIA","sourcesContent":["import {createSlice, nanoid} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState =[\r\n    {id:'1', title:'Title1', content:'dit is wat tekst 1'},\r\n    {id:'2', title:'Title2', content:'dit is wat tekst 2'}\r\n]\r\n\r\nconst postsSlice = createSlice({\r\n    name:'posts',\r\n    initialState,\r\n    reducers:{\r\n\r\n        postAdded: {\r\n            reducer(state, action){\r\n            state.push(action.payload)\r\n            },\r\n            prepare(title, content,userId){\r\n                return{\r\n                    payload:{\r\n                        id:nanoid(),\r\n                        title,\r\n                        content,\r\n                        user:userId\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // postAdded(state, action){\r\n        //     // state:huidige state\r\n        //     state.push(action.payload)\r\n        // },\r\n\r\n        postUpdated(state, action){\r\n            // in action.payload.id, .title, .content\r\n            const {id, title, content}= action.payload\r\n            const existingPost = state.find(post => post.id===id)\r\n\r\n            if(existingPost){\r\n                existingPost.title=title;\r\n                existingPost.content=content;\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\nexport const {postAdded,postUpdated} = postsSlice.actions\r\nexport default postsSlice.reducer\r\n\r\n\r\n\r\n// video 1:40"]},"metadata":{},"sourceType":"module"}