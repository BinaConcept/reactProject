{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\features\\\\posts\\\\addPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newsPost } from '../postsSlice';\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n\n  var _errors$firstName;\n\n  const inputRef = useRef();\n  const [imageUrls, setImageUrls] = useState('');\n  const [display, setDisplay] = useState('');\n  const [title, setTitle] = useState('');\n  const [discription, setDiscription] = useState('');\n  const [subtitle, setSubtitle] = useState('');\n  const [content, setContent] = useState('');\n  const dispath = useDispatch(); //users ophalen uit de Redux-store\n\n  const provinces = useSelector(state => state.provinces); // const onPictureChanged = e => setImageUrls(e.target.value)\n\n  const onDisplayChanged = e => setDisplay(e.target.value);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onDiscriptionChanged = e => setDiscription(e.target.value);\n\n  const onSubtitleChanged = e => setSubtitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostCliked = () => {\n    //je kunt script testen controleerd\n    if (title && content) {\n      //nieuws object gestuurd\n      dispath(newsPost(imageUrls, display, title, discription, subtitle, content));\n      setImageUrls('');\n      setDisplay('');\n      setTitle('');\n      setDiscription('');\n      setSubtitle('');\n      setContent('');\n    }\n  };\n\n  const provinceOptions = provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: province.city,\n    children: province.city\n  }, province.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    firstName: Yup.string().required('First Name is required'),\n    lastName: Yup.string().required('Last name is required'),\n    dob: Yup.string().required('Date of Birth is required').matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Ts & Cs is required')\n  }); // functions to build form returned by useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  function onSubmit(data) {\n    // display form data on success\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\n  }\n\n  /*#__PURE__*/\n  _jsxDEV(Formik, {\n    children: [\"initialValues=\", {\n      firstName: '',\n      lastName: '',\n      email: ''\n    }, \"validationSchema=\", Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }), \"onSubmit=\", (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 1\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      onReset: reset,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrls\",\n        children: \"Picture :\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: () => setImageUrls(inputRef.current.files[0]),\n        ref: inputRef,\n        id: \"gallery-image\",\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), imageUrls ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `assets/images/${imageUrls.name}`,\n        className: \"img-fluid rounded-start\",\n        width: \"400\",\n        alt: \"news_picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 20\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        id: \"imageUrls\",\n        name: \"imageUrls\",\n        value: imageUrls.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDisplay\",\n        children: \"Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"display\",\n        value: display,\n        onChange: onDisplayChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), provinceOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsTitle\",\n        children: \"Title :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsTitle\",\n        name: \"newsTitle\",\n        value: title,\n        onChange: onTitleChanged // ref={register} \n        // className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"firstName\",\n          type: \"text\",\n          ref: register,\n          className: `form-control ${errors.firstName ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsDiscription\",\n        children: \"Discription :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsDiscription\",\n        name: \"newsDiscription\",\n        value: discription,\n        onChange: onDiscriptionChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsSubtitle\",\n        children: \"Subtitel :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newsSubtitle\",\n        name: \"newsSubtitle\",\n        value: subtitle,\n        onChange: onSubtitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newsContent\",\n        children: \"Content :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"newsContent\",\n        name: \"newsContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostCliked,\n        children: \"Save news\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"Fr3aYyGMs25xjjVkfuOEF7OK4/Q=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/posts/addPostForm.js"],"names":["useState","useRef","useDispatch","useSelector","newsPost","React","useForm","yupResolver","Yup","Formik","Field","Form","ErrorMessage","AddPostForm","inputRef","imageUrls","setImageUrls","display","setDisplay","title","setTitle","discription","setDiscription","subtitle","setSubtitle","content","setContent","dispath","provinces","state","onDisplayChanged","e","target","value","onTitleChanged","onDiscriptionChanged","onSubtitleChanged","onContentChanged","onSavePostCliked","provinceOptions","map","province","city","id","validationSchema","object","shape","string","required","firstName","lastName","dob","matches","email","password","min","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","errors","resolver","onSubmit","data","alert","JSON","stringify","max","values","setSubmitting","setTimeout","current","files","name","message"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newsPost } from '../postsSlice'\r\n\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nexport const AddPostForm = () => {\r\n  const inputRef = useRef()\r\n  const [imageUrls, setImageUrls] = useState('')\r\n  const [display, setDisplay] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [discription, setDiscription] = useState('')\r\n  const [subtitle, setSubtitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n\r\n\r\n  const dispath = useDispatch();\r\n\r\n  //users ophalen uit de Redux-store\r\n  const provinces = useSelector(state => state.provinces)\r\n\r\n  // const onPictureChanged = e => setImageUrls(e.target.value)\r\n  const onDisplayChanged = e => setDisplay(e.target.value)\r\n  const onTitleChanged = e => setTitle(e.target.value)\r\n  const onDiscriptionChanged = e => setDiscription(e.target.value)\r\n  const onSubtitleChanged = e => setSubtitle(e.target.value)\r\n  const onContentChanged = e => setContent(e.target.value)\r\n\r\n  const onSavePostCliked = () => {\r\n    //je kunt script testen controleerd\r\n    if (title && content) {\r\n      //nieuws object gestuurd\r\n      dispath(newsPost(imageUrls, display, title, discription, subtitle, content))\r\n      setImageUrls('');\r\n      setDisplay('');\r\n      setTitle('');\r\n      setDiscription('');\r\n      setSubtitle('');\r\n      setContent('');\r\n    }\r\n\r\n  }\r\n\r\n  const provinceOptions = provinces.map(province => (\r\n    <option key={province.id} value={province.city}>{province.city}</option>\r\n  ));\r\n \r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required('Title is required'),\r\n    firstName: Yup.string()\r\n        .required('First Name is required'),\r\n    lastName: Yup.string()\r\n        .required('Last name is required'),\r\n    dob: Yup.string()\r\n        .required('Date of Birth is required')\r\n        .matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\r\n    email: Yup.string()\r\n        .required('Email is required')\r\n        .email('Email is invalid'),\r\n    password: Yup.string()\r\n        .min(6, 'Password must be at least 6 characters')\r\n        .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n    acceptTerms: Yup.bool()\r\n        .oneOf([true], 'Accept Ts & Cs is required')\r\n});\r\n\r\n// functions to build form returned by useForm() hook\r\nconst { register, handleSubmit, reset, errors } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n});\r\n\r\nfunction onSubmit(data) {\r\n    // display form data on success\r\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\r\n}\r\n\r\n<Formik>\r\ninitialValues={{ firstName: '', lastName: '', email: '' }}\r\nvalidationSchema={Yup.object({\r\n  firstName: Yup.string()\r\n    .max(15, 'Must be 15 characters or less')\r\n    .required('Required'),\r\n  lastName: Yup.string()\r\n    .max(20, 'Must be 20 characters or less')\r\n    .required('Required'),\r\n  email: Yup.string().email('Invalid email address').required('Required'),\r\n})}\r\nonSubmit={(values, { setSubmitting }) => {\r\n  setTimeout(() => {\r\n    alert(JSON.stringify(values, null, 2));\r\n    setSubmitting(false);\r\n  }, 400);\r\n}}\r\n</Formik>\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    <section>\r\n      <h2>Add a News</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)} onReset={reset}>\r\n        <label htmlFor=\"imageUrls\">Picture :&nbsp;</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={() => setImageUrls(inputRef.current.files[0])}\r\n          ref={inputRef}\r\n          id=\"gallery-image\"\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />  \r\n        <br/>\r\n        {imageUrls?<img src={`assets/images/${imageUrls.name}`} className=\"img-fluid rounded-start\" width=\"400\"  alt=\"news_picture\" />:null}\r\n\r\n        <br/>\r\n        <input\r\n          type=\"hidden\"\r\n          id=\"imageUrls\"\r\n          name=\"imageUrls\"\r\n          value={imageUrls.name}\r\n        />\r\n\r\n        <label htmlFor=\"newsDisplay\">Display:</label>\r\n        <select id=\"display\" value={display} onChange={onDisplayChanged}>\r\n          <option value={\"\"}></option>\r\n          {provinceOptions}\r\n        </select>\r\n\r\n        <label htmlFor=\"newsTitle\">Title :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsTitle\"\r\n          name=\"newsTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n          // ref={register} \r\n          // className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\r\n          \r\n        />\r\n         <div className=\"form-group col-5\">\r\n            <label>First Name</label>\r\n            <input name=\"firstName\" type=\"text\" ref={register} className={`form-control ${errors.firstName ? 'is-invalid' : ''}`} />\r\n            <div className=\"invalid-feedback\">{errors.firstName?.message}</div>\r\n        </div>\r\n\r\n        <label htmlFor=\"newsDiscription\">Discription :</label>\r\n        <textarea\r\n          id=\"newsDiscription\"\r\n          name=\"newsDiscription\"\r\n          value={discription}\r\n          onChange={onDiscriptionChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsSubtitle\">Subtitel :</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"newsSubtitle\"\r\n          name=\"newsSubtitle\"\r\n          value={subtitle}\r\n          onChange={onSubtitleChanged}\r\n        />\r\n\r\n        <label htmlFor=\"newsContent\">Content :</label>\r\n        <textarea\r\n          id=\"newsContent\"\r\n          name=\"newsContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <br />\r\n\r\n        <button type=\"button\" onClick={onSavePostCliked}>Save news</button>\r\n        <br />\r\n      </form>\r\n    </section>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}