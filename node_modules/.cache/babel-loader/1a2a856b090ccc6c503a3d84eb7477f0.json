{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\features\\\\posts\\\\addPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postAdded } from '../postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const dispath = useDispatch();\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onAuthorChanged = e => setUserId(e.target.value);\n\n  const onSavePostCliked = () => {\n    //je kunt script testen controleerd\n    if (title & content) {\n      //nieuws object gestuurd\n      dispath(postAdded(title, content, userId));\n      setTitle('');\n      setContent('');\n    }\n  };\n\n  const users = useSelector;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userId,\n        onChange: onSavePostCliked,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), userOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostCliked,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"OKZamM2DfYS7AuamZzBnT9Xn33c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/posts/addPostForm.js"],"names":["React","useState","useDispatch","useSelector","postAdded","AddPostForm","title","setTitle","content","setContent","userId","setUserId","dispath","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostCliked","users","userOptions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAGA,QAAMW,OAAO,GAAGV,WAAW,EAA3B;;AAEA,QAAMW,cAAc,GAAGC,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,QAAMC,gBAAgB,GAAGH,CAAC,IAAIL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;AACA,QAAME,eAAe,GAAGJ,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;;AAEA,QAAMG,gBAAgB,GAAC,MAAK;AAC1B;AACA,QAAIb,KAAK,GAAEE,OAAX,EAAmB;AAChB;AACDI,MAAAA,OAAO,CAACR,SAAS,CAACE,KAAD,EAAQE,OAAR,EAAiBE,MAAjB,CAAV,CAAP;AACAH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AAEF,GATD;;AAWA,QAAMW,KAAK,GAAGjB,WAAd;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,KAAK,EAAEG,KAJT;AAKE,QAAA,QAAQ,EAAEO;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAEL,OAHT;AAIE,QAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE;AAAQ,QAAA,KAAK,EAAEP,MAAf;AAAuB,QAAA,QAAQ,EAAES,gBAAjC;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGE,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAoBE;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEF,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtDM;;GAAMd,W;UAMKH,W;;;KANLG,W","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { postAdded } from '../postsSlice'\r\n\r\nexport const AddPostForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [userId, setUserId] = useState('')\r\n\r\n\r\n  const dispath = useDispatch();\r\n\r\n  const onTitleChanged = e => setTitle(e.target.value)\r\n  const onContentChanged = e => setContent(e.target.value)\r\n  const onAuthorChanged = e => setUserId(e.target.value)\r\n\r\n  const onSavePostCliked=() =>{\r\n    //je kunt script testen controleerd\r\n    if( title& content){\r\n       //nieuws object gestuurd\r\n      dispath(postAdded(title, content, userId))\r\n      setTitle('');\r\n      setContent('');\r\n    }\r\n   \r\n  }\r\n\r\n  const users = useSelector\r\n\r\n  return (\r\n    <section>\r\n      <h2>Add a New Post</h2>\r\n      <form>\r\n        <label htmlFor=\"postTitle\">Post Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n        />\r\n        <label htmlFor=\"postContent\">Content:</label>\r\n        <textarea\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <select value={userId} onChange={onSavePostCliked}>\r\n          <option value={\"\"}></option>\r\n          {userOptions}\r\n        </select>\r\n        <br/>\r\n        <button type=\"button\" onClick={onSavePostCliked}>Save Post</button>\r\n        <br/>\r\n      </form>\r\n    </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}