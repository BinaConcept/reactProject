{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thomas More\\\\Bacholer\\\\React\\\\Projecten\\\\project_2\\\\src\\\\features\\\\posts\\\\postAuthor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostAuthor = _ref => {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const author = useSelector(state => state.users.find(user => user.id === userId));\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"by \", author ? author.name : 'Unknown author', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 6\n  }, this);\n};\n\n_s(PostAuthor, \"UnUkEIi1vfi4wMR9+/C8AWxRK6k=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostAuthor;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostAuthor\");","map":{"version":3,"sources":["D:/Thomas More/Bacholer/React/Projecten/project_2/src/features/posts/postAuthor.js"],"names":["React","useSelector","PostAuthor","userId","author","state","users","find","user","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACxC,QAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK,IAC9BA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAArC,CADwB,CAA1B;AAIA,sBACG;AAAA,sBACQC,MAAM,GAAGA,MAAM,CAACM,IAAV,GAAiB,gBAD/B,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,oBAEU;AAAA;AAAA;AAAA;AAAA,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAME,CAXG;;GAAMR,U;UACID,W;;;KADJC,U","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const PostAuthor = ({ userId }) => {\r\n  const author = useSelector(state =>\r\n    state.users.find(user => user.id === userId)\r\n  )\r\n\r\n  return(\r\n     <span>\r\n         by {author ? author.name : 'Unknown author'}\r\n         <br/> <br/>\r\n     </span> \r\n \r\n  )}"]},"metadata":{},"sourceType":"module"}